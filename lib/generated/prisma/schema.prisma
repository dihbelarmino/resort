generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:f1bc817e10df61923b49@iatech.space:3306/resort"
}

model Usuario {
  id        Int      @id @default(autoincrement())
  nome      String
  email     String   @unique
  senha     String
  permissao String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cliente {
  id        Int             @id @default(autoincrement())
  nome      String
  cpf       String          @unique
  email     String?
  telefone  String?
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  quartos   QuartoCliente[]
}

model Quarto {
  id        Int             @id @default(autoincrement())
  numero    Int             @unique
  tipo      String
  status    String          @default("disponivel")
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  ocupacoes QuartoCliente[]
}

model QuartoCliente {
  id        Int             @id @default(autoincrement())
  checkin   DateTime
  checkout  DateTime
  clienteId Int
  quartoId  Int
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  celulares QuartoCelular[]
  cliente   Cliente         @relation(fields: [clienteId], references: [id], onDelete: Cascade)
  quarto    Quarto          @relation(fields: [quartoId], references: [id], onDelete: Cascade)

  @@index([clienteId], map: "QuartoCliente_clienteId_fkey")
  @@index([quartoId], map: "QuartoCliente_quartoId_fkey")
}

model QuartoCelular {
  id              Int           @id @default(autoincrement())
  nome            String
  celular         String
  quartoClienteId Int
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  quartoCliente   QuartoCliente @relation(fields: [quartoClienteId], references: [id], onDelete: Cascade)

  @@index([quartoClienteId], map: "QuartoCelular_quartoClienteId_fkey")
}

model Tarefa {
  id            Int        @id @default(autoincrement())
  tipo          String
  quartoId      Int
  responsavelId Int?
  inicio        DateTime?
  fim           DateTime?
  status        String     @default("pendente")
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  avaliacao     Avaliacao?
}

model Avaliacao {
  id           Int      @id @default(autoincrement())
  tarefaId     Int      @unique
  nota         Int
  supervisorId Int
  observacao   String?  @db.Text
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  tarefa       Tarefa   @relation(fields: [tarefaId], references: [id], onDelete: Cascade)
}
